$[D "Functions that generate markdown documentation about endpoints used for uploading"]
$[D "digital assets."]

$[function uploadMarkdown
  (entity D "Generates markdown documentation for this entity.",
   collectionAttribute D "The assetup upload collection attribute if it is for a collection..",
   attribute D "The attribute associated with the asset.",
   role D "The role that is required for uploading."
  )]
    $[if collectionAttribute == null]
        $[capture assetPath]${attribute|domain:APIPath|name}$[/capture]
## Upload ${entity|title} - ${attribute|title} - Multipart Form
    $[else]
        $[capture assetPath]${collectionAttribute|domain:APIPath|name}/${attribute|domain:APIPath|name}$[/capture]
## Upload ${entity|title} - ${collectionAttribute|title} - ${attribute|title} - Multipart Form
    $[/if]

${attribute.description}

Note: This endpoint involves the the multipart file upload using a form - as is common with a web based file upload.

|Method|Path|
|:---:|:---|
|POST|`${apiUrlPrefix}/${entity|domain:APIPath|name}/{id}/form/${assetPath}/{ext}`|

Where:

|Param|Description|
|:---|:---|
|`id`|The unique ID of the `${entity.name}` object to which the file to upload is associated.|
|`ext`|The file extension of the file being uploaded.|

The contents of the POST is the multipart form.

    $[if collectionAttribute == null]
## Upload ${entity|title} - ${attribute|title} - Raw file bytes
    $[else]
## Upload ${entity|title} - ${collectionAttribute|title} - ${attribute|title} - Raw file bytes
    $[/if]

${attribute.description}

Note: This endpoint involves uploading the file as its raw binary self.

|Method|Path|
|:---:|:---|
|POST|`${apiUrlPrefix}/${entity|domain:APIPath|name}/{id}/file/${assetPath}/{ext}`|

Where:

|Param|Description|
|:---|:---|
|`id`|The unique ID of the `${entity.name}` object to which the file to upload is associated.|
|`ext`|The file extension of the file being uploaded.|

The contents of the POST is the file itself.

$[/function]