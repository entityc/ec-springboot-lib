$[ language java 
   D summary "Functions that generate update (PUT) endpoints." 
   D "Contains functions that generate update endpoint methods for a controller class." 
   function updateMarkdown
   D "Generates markdown documentation for the basic update endpoint."
   (entity
    D "The entity corresponding to the update endpoint documentation to generate.",
    apiUrlPrefix
    D "The start of all admin URLs."
   )
]
## Update ${entity|title}

|Method|Path|
|:---:|:---|
|PUT|`${apiUrlPrefix}/${entity|domain:APIPath|name}/{id}`|

Where:

|Param|Description|
|:---|:---|
|`id`|The unique ID of the `${entity.name}` object to be updated.|

    $[ let createViewOrEntity = entity|domain:JSONDTO 
       let attributeList = createViewOrEntity.attributes|sort 
       let relationshipList = createViewOrEntity.relationships|sort 
       if attributeList#count + relationshipList#count > 0 ]
The body of the POST is JSON containing only the following fields:

|Field|Description|
|:---|:---|
        $[ foreach domainAttribute in attributeList 
               if domainAttribute.attribute.isCreation || domainAttribute.attribute.isModification ]$[ continue ]$[ endif ]
|`${domainAttribute.name}`|${domainAttribute.description}|
        $[ endforeach 
           if relationshipList#count > 0 
               foreach relationship in relationshipList 
                   if relationship.to.isOne && relationship.to.entity.hasPrimaryKey ]
|`${relationship.name}.${relationship.to.entity.primaryKeyAttribute.name}`|Primary key of contextual `${relationship.to.entity.entity.name}` object.|
                $[ endif 
               endforeach 
           endif 
       endif 
   endfunction ]