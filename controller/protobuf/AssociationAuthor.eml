$[ D summary, main "Contains an author used to generate code related to creating associations between objects." ]
$[ import "security/SecurityFunctions" ]
$[ import "util/AutoWired" ]

$[ author to org.entityc.springboot.controller.protobuf ]
    $[ author to outlet methods
       D "Adds an associatedTo... endpoint to the controller for protobuf objects."
    ]
        $[ foreach relationship in entity.implicitRelationships ]
            $[ if relationship.to.entity.hasTag("internal:many-to-many") ]
                $[ let manyToManyEntity = relationship.to.entity ]
                $[ let destMMEntity = null ]
                $[ foreach mmRel in manyToManyEntity.implicitRelationships ]
                    $[ if mmRel.to.entity.name != entity.name ]
                        $[ let destMMEntity = mmRel.to.entity ]
                        $[ break ]
                    $[/ if ]
                $[/ foreach ]
                $[ capture fullProtobufClassName ]${module.name|capitalize}.${destMMEntity|domain:ProtobufDTO|name}$[/ capture ]
                $[ let destModelName = destMMEntity|domain:Model|name ]
                $[ let destPbMapper = destMMEntity|domain:DTOMapper|name|uncapitalize ]
                $[ call addAutoWired(domainEntity: destMMEntity|domain:DTOMapper) ]
                $[ let destPKMethName = destMMEntity.primaryKeyAttribute|domain:Model|name|capitalize ]
$[ send imports ]
import ${destMMEntity|domain:Model|fullname};
$[/ send ]
                $[ publisher org.entityc.springboot.controller.associate
                   D "Associate endpoint"
                ]
    // [Template] ${__template.name}:${__outlet.name} < ${__author.template.name}
    @RequestMapping(
            path = "{id}/${destMMEntity|domain:APIPath|name}",
            method = RequestMethod.POST,
        consumes = "application/x-protobuf-lite"
    )
    @ResponseStatus(HttpStatus.ACCEPTED)
$[ outlet annotation
   D "Resides just above the method declaration in the annocation area."
]
$[/ outlet ]
    public void associateTo${destModelName}(@PathVariable("id") UUID id, @RequestBody ${fullProtobufClassName} requestDto) throws ServiceException {
        ${destModelName} requestObject = ${destPbMapper}.toModelFromProtobuf(requestDto);
        ${service}.associateTo${destModelName}(id, requestObject.get${destPKMethName}());
    }

                $[/ publisher ]
            $[/ if ]
        $[/ foreach ]
    $[/ author ]
$[/ author ]