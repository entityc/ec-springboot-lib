$[ D summary, main "This setup template will establish a basic web application that contains an REST API, web" ]
$[ D summary, main "admin portal and simple custom web page." ]
$[ D "" ]
$[ D "After this template runs, you will have a directory containing the necessary entity" ]
$[ D "compiler input files to generate the application." ]

$[ let repoTag = "production" ]
$[ let stdLibRepoName = "ec-std-lib" ]
$[ let stdLibRepoTag = "v0.10.0" ]

$[* -------------- PROMPTS -------------- *]
$[ log ]$[/ log ]

$[* APPLICATION NAME *]
$[ let appName = (#appName:"MyApp") ]
$[ prompt appName: string ]Enter the name of the application [${appName}]: $[/ prompt ]
$[ if !(appName|is:identifier) ]
    $[ log fatal ]The application name must start with a letter and only contain letters and numbers.$[/ log ]
$[/ if ]
$[ if appName|is:uncapitalized ]
    $[ let appName = appName|capitalize ]
    $[ log info ]Capitalizing application name: ${appName}$[/ log ]
$[/ if ]

$[* API PREFIX NAMESPACE *]
$[ let urlPrefix = #urlPrefix ]
$[ prompt urlPrefix: string ]Enter optional URL prefix for the application (e.g., my/app): $[/ prompt ]
$[ if urlPrefix == null ]
    $[ let urlPrefix = "" ]
$[/ if ]
$[ if !(urlPrefix|is:path) ]
    $[ log fatal ]The URL prefix must be a valid URL path (letters, numbers, '-' and '/').$[/ log ]
$[/ if ]

$[* APP BASE JAVA PACKAGE *]
$[ let appBasePackage = #appBasePackage ]
$[ prompt appBasePackage: string ]Enter the base Java package for all installed/generated source files: $[/ prompt ]
$[ if appBasePackage == null || appBasePackage.length == 0 ]
    $[ log fatal ]You must specify at least one level of package.$[/ log ]
$[/ if ]
$[ if !(appBasePackage|is:namespace) ]
    $[ log fatal ]The specified package is not a valid Java package.$[/ log ]
$[/ if ]

$[* ENTITY NAME *]
$[ let entityName = (#entityName:"Widget") ]
$[ prompt entityName: string ]Enter an entity name to get things started [${entityName}]: $[/ prompt ]
$[ if !(entityName|is:identifier) ]
    $[ log fatal ]The entity name must start with a letter and only contain letters and numbers.$[/ log ]
$[/ if ]
$[ if entityName|is:uncapitalized ]
    $[ let entityName = entityName|capitalize ]
    $[ log info ]Capitalizing entity name: ${entityName}$[/ log ]
$[/ if ]

$[ let protobufOption = (#protobuf:"n") ]
$[ prompt protobufOption: boolean ]Would you like to include Protobuf support (y/n)? [${protobufOption}]: $[/ prompt ]

$[ let extraDomains = @[]@ ]
$[ if protobufOption ]
    $[ do extraDomains.add("ProtobufDTO") ]
$[/ if ]

$[* -------------- INSTALLS -------------- *]

$[* Entities *]
$[ install "entities/App.edl" "entities" ]
$[ install "entities/Platform.edl" "entities" ]

$[* Domains *]
$[ install "domains/AdminUIDomain.edl" "domains" ]
$[ install "domains/SecurityDomain.edl" "domains" ]
$[ install "domains/SpecializedDomains.edl" "domains" ]

$[* Authors *]
$[ install "authors/PomAuthor.eml" "authors" ]

$[* Base *]
$[ install "basicWebApp/Configuration.edl" "" ]
$[ install "basicWebApp/Space.edl" "" ]