$[ language java ]
$[ domain AdminUI ]
$[ D summary "This template generates an admin detail page for an entity." ]
$[ D "This template generates an admin detail page for an entity. It allows an admin to edit fields" ]
$[ D "of an object and create new objects of child (one-to-many relationship) entities." ]
$[ D detail "At the very top of the page is the same navigation bar from the home screen. The screen has other" ]
$[ D detail "features that you can customize." ]
$[ D detail "" ]
$[ D detail "### Breadcrumb Bar" ]
$[ D detail "" ]
$[ D detail "Just below the top navigation is what is referred to as a breadcrumb bar. This bar will allow" ]
$[ D detail "you to see the depth of screens you have traversed and let you click on a prior level to go back." ]
$[ D detail "Each depth (iten on the bar) represents some entity in your model. If a particular entity has a" ]
$[ D detail "one-to-many relationship with another entity, that represents another level. As the admin" ]
$[ D detail "goes to deeper levels items are added to the bar." ]
$[ D detail "" ]
$[ D detail "Each item in this bar is formatted as:

  *header* *number*`:` *title*

Where *header*, *number* and *title* correspond to tags that you place on an entity that can appear in the bar.

| Tag | Description
|---|---|
| `breadcrumb.header` | This is typically placed on an entity. |
| `breadcrumb.number` | This would be placed on a numeric attribute that represents some type of numbering for objects of this entity.|
| `breadcrumb.title` | This should be placed on an attribute that provides a name or title of the object.|

All tags are optional and which tags are used depend on how you want it to look as a breadcrumb item. For some" ]
$[ D detail "entities, for instance, it may be appropriate to just have a title." ]
$[ D detail "" ]
$[ D detail "### Headline

Below the breadcrumb bar is what is referred to as a Headline. It has the same three elements as a breadcrumb items:

  *header* *number*`:` *title*

You make an entity's headline be the same as how its breadcrumb item is formatted or you can make it different. The tags for the headline are:

| Tag | Description
|---|---|
| `headline.header` | This is typically placed on an entity. |
| `headline.number` | This would be placed on a numeric attribute that represents some type of numbering for objects of this entity.|
| `headline.title` | This should be placed on an attribute that provides a name or title of the object.|

Although the headline is composed of attributes that are shown and editable below it, it is in bigger font and let's you know what you are editing very clearly." ]
$[ D detail "" ]
$[ D detail "### Object Fields" ]
$[ D detail "" ]
$[ D detail "The next section of the page shows attributes (fields) of the page object as a table where the" ]
$[ D detail "first column is the attribute name and the second column is its value. The third column will" ]
$[ D detail "populate with an **Edit** button for fields that are not a creation or modification date." ]
$[ D detail "" ]
$[ D detail "String fields are by default considered just plain text. However, this template also" ]
$[ D detail "supports a string field that is to contain Markdown. For string fields that you want to" ]
$[ D detail "contain Markdown, simply tag those attributes in the `AdminUI` domain with `markdown`. Not" ]
$[ D detail "only will string values for these attributes be displayed as markdown (that is rendered to" ]
$[ D detail "HTML - with GitHub flavored style) but also will invoke a web based markdown editor when you" ]
$[ D detail "want to edit the field." ]
$[ D detail "" ]
$[ D detail "### Child Objects" ]
$[ D detail "" ]
$[ D detail "For each one-to-many relationship this entity has with other entites it can render a table" ]
$[ D detail "for each in this bottom section. Only the relationships that are tagged with `detail` will be" ]
$[ D detail "included. The fields of the child entity that are included in the generated table are those" ]
$[ D detail "attributes that are tagged with `summary`." ]
$[ D detail "" ]

$[ import "web/thymeleaf-bootstrap/WebPageFunctions" ]
$[ import "web/thymeleaf-bootstrap/modal/ModalFunctions" ]
$[ import "security/SecurityFunctions" ]

$[ publisher org.entityc.springboot.web.admin.html.detail ]
    $[ foreach entity in space.entities ]
        $[ if entity.isImplicit || entity.isExtern || entity.isIncluded || entity.isTransient || entity.isSecondary ]$[ continue ]$[/ if ]
        $[ let domainEntity = entity|domain ]
        $[ let filename = "admin/" + domainEntity.name + "_detail" ]
        $[ let pageTitle = (domainEntity|title) + " Detail" ]
        $[ let entityDtoClassName = entity|domain:JSONDTO|name|uncapitalize ]
        $[ file "resources/templates" filename "html" ]
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
            $[ call commonHead(title: pageTitle) ]
            $[ call stylesheet_css(href: "https://cdn.jsdelivr.net/npm/inscrybmde@1.11.6/dist/inscrybmde.min.css", th: false, attr: "") ]
            $[ call javascript(src: "https://cdn.jsdelivr.net/npm/inscrybmde@1.11.6/dist/inscrybmde.min.js", th: false, attr: "") ]
            $[ call stylesheet_css(href: "https://cdn.jsdelivr.net/npm/github-markdown-css@4.0.0/github-markdown.min.css", th: false, attr: "") ]
            $[ call javascript(src: "https://cdn.jsdelivr.net/npm/marked@4.0.0/marked.min.js", th: false, attr: "") ]
            $[ foreach attribute in entity.attributes ]
                $[ if attribute.secondaryEntityIsTagged("asset:file") ]
                    $[ call stylesheet_css(href: "https://cdn.jsdelivr.net/gh/kartik-v/bootstrap-fileinput@5.2.5/css/fileinput.min.css", th: false, attr: "media=\"all\"") ]
                    $[ break ]
                $[/ if ]
            $[/ foreach ]
            $[ call stylesheet_css(href: "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css", th: false, attr: "") ]
            $[ call stylesheet_css(href: "https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.css", th: false, attr: "") ]
            $[ call javascript(src: "https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.js", th: false, attr: "") ]
</head>
<body>
            $[ call commonBodyNavbar(backURL: null, title: pageTitle) ]
<br>
<br>
<div class="container">
$[ outlet BodyTopSection ]
$[/ outlet ]
$[ outlet HeadlineSection ]
$[/ outlet ]
	<div class="container">
$[ outlet BodyMainSection ]
$[/ outlet ]

$[*-----------------------------------------------------------------------------------------------------------------*]
            $[ call CheckIfReleasedEntity(entity: entity)->(isReleasedEntity: isReleasedEntity, releaseEntityPKAttribute: releaseEntityPKAttribute) ]
            $[ if !isReleasedEntity ]
    <br/>
    <!-- DELETE BUTTON -->
    <div>
        <button th:if="${$}{canEdit${entity|name}}" type="button" class="btn btn-danger"
        data-bs-toggle="modal" data-bs-target="#confirm-delete">Delete ${entity|title}</button>
    </div>
            $[/ if ]
    <br/>
  </div>
</div>
            $[ if !isReleasedEntity ]
<div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form th:action="@{${adminUrlPrefix}/${entity|domain:APIPath|name}/{id}/delete(id=${$}{${entity|domain:JSONDTO|name|uncapitalize}.id})}" method="POST">
        <div class="modal-content">
            <div class="modal-header">
                Delete ${entity|title}
            </div>
            <div class="modal-body">
                Are you sure you want to delete this ${entity|title}?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <input type="submit"  class="btn btn-danger" value="Delete" />
            </div>
        </div>
        </form>
    </div>
</div>
<script>
</script>
                $[ call insertDateEditModalScript() ]
                $[ call insertStringEditModalScript() ]
                $[ call insertBooleanEditModalScript() ]
                $[ let singleEnumsInserted = @[]@ ]
                $[ let manyEnumsInserted = @[]@ ]
                $[ foreach domainAttribute in domainEntity.getFlatDeclaredAttributeList(@["enum","entity"]@) ]
                    $[ if domainAttribute.type.isEnumType ]
                        $[ if domainAttribute.attribute.isArray ]
                            $[ if !manyEnumsInserted.contains(domainAttribute.type) ]
                                $[ call insertManyEnumEditModalScript(attribute: domainAttribute.attribute) ]
                                $[ do manyEnumsInserted.add(domainAttribute.type) ]
                            $[/ if ]
                        $[ else ]
                            $[ if !singleEnumsInserted.contains(domainAttribute.type) ]
                                $[ call insertEnumEditModalScript(attribute: domainAttribute.attribute) ]
                                $[ do singleEnumsInserted.add(domainAttribute.type) ]
                            $[/ if ]
                        $[/ if ]
                    $[ elseif domainAttribute.type.isEntityType ]
                        $[ let secondaryEntity = domainAttribute.attribute.typeEntity ]
                        $[ if secondaryEntity.hasTag("asset:file") ]
                            $[ call insertFileUploadModalScript() ]
                        $[/ if ]
                    $[/ if ]
                $[/ foreach ]
                $[ foreach domainRelationship in domainEntity.declaredDomainRelationships ]
                    $[ if domainRelationship.to.isOne ]
                        $[ call insertEntitySelectModalScript(relationship: domainRelationship.relationship) ]
                    $[/ if ]
                $[/ foreach ]
            $[/ if ]
</body>
</html>
        $[/ file ]
    $[/ foreach ]
$[/ publisher ]